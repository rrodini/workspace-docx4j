# ballotgen.properties
#
# Standard Java properties file used to configure the BallotGen program.
#

# ElectionType (Either: General or Primary (case-sensitive))
election.type=Primary

# Contests file level (which XYZ_contests.txt files). Either: COMMON or MUNICIPAL level)
contest.file.level=MUNICIPAL

# Endorsed party (see Party enum. (case-sensitive))
endorsed.party=Democratic

# Precinct to Zone mapping CSV file
precinct.to.zone.file=../2023-precincts-zones.csv

# Endorsements CSV file (optional)
endorsements.file=../2023-primary-endorsements.csv

# This is the prepared Word templates that must be prepared for each election.
word.template.default=Primary_2023_Ballot_3-column_letter.dotx

# Regexes moved to contestgen.properties
#contest.format.1=
#contest.format.2=
#contest.format.3=

# column.break.contest.count
# crude way to inject column breaks following a contest #. Counting starts at 1.
# should be a comma list of numbers or blank.
column.break.contest.count=

# write.in.display true => add Write-in candidate line
write.in.display=true

## Not currently used (v 1.3.0+)
## Generate voter ballot instructions in each Sample Ballot
generate.chunk.instructions=false

## Chunks below are not currently used (v 1.3.0+)
## Parameterize the "chunks" of text to generate
chunk.instructions=ballot_instructions.wml
chunk.write.in=write_in.wml
#chunk.referendum
#chunk.retention

# environment (TEST, INTEGRATION, PRODUCTION)
environment=PRODUCTION