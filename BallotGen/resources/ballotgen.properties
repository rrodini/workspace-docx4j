# ballotgen.properties
#
# Standard Java properties file used to configure the BallotGen program.
#

# ElectionType (Either: General or Primary (case-sensitive))
election.type=General

# Contests file level (which XYZ_contests.txt files). Either: COMMON or MUNICIPAL level)
contest.file.level=MUNICIPAL

# Endorsed party (see Party enum. (case-sensitive))
endorsed.party=Democratic

# Page break display (false=>no page break)
page.break.display=false

# Page break wording
page.break.wording=See other side of ballot

# Precinct to Zone mapping CSV file (no quotes)
chester.precinct.to.zone.file=../2023-precincts-zones.csv
#precinct.to.zone.file=../bucks-precincts-zones.csv

# Endorsements CSV file (no quotes)
chester.endorsements.file=../2023-primary-endorsements.csv
#endorsements.file=../bucks-primary-endorsements.csv

# Write-in candidates CSV file (no quotes)
chester.write.ins.file=../chester-2023-general-writeins.csv

# These are the prepared Word templates that must be prepared for each election.
#word.template.default=./resources/Primary_2023_Ballot_3-column_letter.dotx
chester.word.template.default=./resources/Sample_Ballot_3-column_letter.dotx

# Regexes moved to contestgen.properties
##contest.format.1=
##contest.format.2=
##contest.format.3=

# column.break.contest.count
# crude way to inject column breaks following a contest #. Counting starts at 1.
# should be a comma list of numbers or blank.
chester.column.break.contest.count=

# write.in.display true => add Write-in candidate line
chester.write.in.display=true

## Not currently used (v 1.3.0+)
## Generate voter ballot instructions in each Sample Ballot
chester.generate.chunk.instructions=false

## Chunks below are not currently used (v 1.3.0+)
## Parameterize the "chunks" of text to generate
chester.chunk.instructions=ballot_instructions.wml


# environment (TEST, INTEGRATION, PRODUCTION)
environment=PRODUCTION